#!/bin/bash
# Script to make skeleton files
# for certain programming languages

[[ -n $1 ]] && filename=$1

usage() {
    echo This script will automatically put a set 
    echo of header lines appropriate for the wanted 
    echo language in the head of a new file, that is
    echo to be given make_script as first argument.
    echo The script guesses according to filename ending.
}

case $filename in 
    *.lsp)
        echo '#!/usr/bin/newlisp' >> $filename
        echo '# vim:ft=newlisp' >> $filename
        echo >> $filename
        echo >> $filename
        echo >> $filename
        echo '(exit)' >> $filename
        ;;
    *.pl)
        echo '#!/usr/bin/perl' >> $filename
        echo  >> $filename
        echo '#use warnings;' >> $filename
        echo '#use strict;' >> $filename
        echo 'use common::sense;' >> $filename
        echo >> $filename
        ;;
    *.sh)
        echo '#!/bin/bash' >> $filename
        echo "# - $filename" >> $filename
        echo "IFS=\"\`printf '\n\t'\`\"" >> $filename
        ;;
    *.fish)
        echo '#!/usr/bin/fish' >> $filename
        echo "# - $filename" >> $filename
        ;;
    *.scm)
        echo '#!/usr/bin/guile -s' >> $filename
        echo '!#' >> $filename
        echo '' >> $filename
        ;;
    *.rb)
        echo '#!/usr/bin/ruby' >> $filename
        echo '# coding: utf-8' >> $filename
        echo "# $filename" >> $filename
        echo >> $filename
        ;;
    *.lua)
        echo '#!/usr/bin/lua -f' >> $filename
        echo "-- $filename" >> $filename
        echo >> $filename
        ;;
      *.py)
        echo '#!/usr/bin/python' >> $filename
        echo "# $filename" >> $filename
        echo >> $filename
        ;;
    *)
        echo "not yet implemented"
        ;;
esac

[[ -f $filename ]] && chmod u+x $filename
